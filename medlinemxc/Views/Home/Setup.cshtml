@using System.Data.SqlClient;
@using WebMatrix.Data;
@{
    Page.Title = "Proceso Setup";

    #region DatosSQL
    var db = Database.Open("SqlCon");

    //Wave Reciente

    var waveQuery = @"SELECT TOP (1) [Wave_Number]
    FROM [SetupScanningSystem].[dbo].[Scans]
    where Company_Number = 686 and Company_Section = 'Conveyor'
    and Record_Operation_Type  = 'Scan_Record'
    order by Timestamp DESC";

    var waveResultado = db.Query(waveQuery);

    int waveReciente = waveResultado.ElementAt(0)[0];

    //Wave Tiempo Transcurrido

    var queryTiempo = @"SELECT TOP (1) Timestamp ,
convert(varchar(5),DateDiff(s, Timestamp, GETDATE())/3600)+':'+convert(varchar(5),DateDiff(s, Timestamp, GETDATE())%3600/60)+':'+convert(varchar(5),(DateDiff(s, Timestamp, GETDATE())%60)) as TiempoTranscurrido
    FROM [SetupScanningSystem].[dbo].[Scans]
    where Company_Number = 686 and Company_Section = 'Conveyor'
	and Record_Operation_Type  = 'Scan_Record' and Wave_Number = " + waveReciente.ToString() + @"
    order by Timestamp asc";

    var waveTiempo = db.Query(queryTiempo);
    DateTime FechaInicio = waveTiempo.ElementAt(0)[0];
    DateTime FActual = System.DateTime.Now;

    TimeSpan TT = FActual.Subtract(FechaInicio);
    TimeSpan tiempoTranscurrido = new TimeSpan(TT.Days, TT.Hours, TT.Minutes, TT.Seconds);


    //Detalle Wave y total de WO
    var detalleWave = @"SELECT A.Lane_Number as Lane,
 A.Work_Order_Number as WO,
cast(sum(case when CONVERT(float,ISNULL(Total_Scanned_Quantity,0)) = Sum_of_Allocated_Quantity
then 1 else 0 end) as varchar)+' / ' + cast (count(A.Part_Number_Name) as varchar) Components
 --iif(Total_Scanned_Quantity is null,
 --0,
 --Total_Scanned_Quantity) AS Validated_Total_Scanned_Quantity,

FROM (SELECT A.Lane_Number,
 A.Work_Order_Number,
 A.Part_Number_Name,
 sum(A.Allocated_Quantity) AS Sum_of_Allocated_Quantity,
 (
SELECT sum(C.Scanned_Quantity)
FROM Scans as C
WHERE
A.Company_Number=C.Company_Number And
A.Company_Section=C.Company_Section And
A.Wave_Number=C.Wave_Number And
A.Lane_Number=C.Lane_Number And
A.Work_Order_Number=C.Scanned_Work_Order_Number And
A.Part_Number_Name=C.Scanned_Part_Number_Name
) AS Total_Scanned_Quantity,
 B.Part_Number
FROM Master AS A LEFT JOIN Excluded AS B ON (A.Company_Number=B.Company_Number) AND (A.Company_Section=B.Company_Section) AND (A.Part_Number_Name=B.Part_Number)
WHERE A.Company_Number=686 And
A.Company_Section='Conveyor' And
A.Wave_Number= " + waveReciente.ToString() + @"And
A.Allocated_Quantity>0
GROUP BY A.Company_Number,
 A.Company_Section,
 A.Wave_Number,
 A.Lane_Number,
 A.Work_Order_Number,
 A.Part_Number_Name,
 B.Part_Number
)  AS A
where Part_Number is null
group by Lane_Number, Work_Order_Number
order by Lane_Number, Work_Order_Number";

    var DetalleResultado = db.Query(detalleWave);
    var totalWo = DetalleResultado.Count();



    //Proceso de wave

    var selectQueryString = @"SELECT P.Lane_Number, cast(AVG(P.Progress) as decimal (10,0)) Progress from
(SELECT A.Lane_Number,
cast(Sum(CONVERT(float,ISNULL(A.Total_Scanned_Quantity,0))) / Sum(CONVERT(float,A.Sum_of_Allocated_Quantity)) *100 as decimal (10,2)) AS Progress
 --iif(Total_Scanned_Quantity is null,
 --0,
 --Total_Scanned_Quantity) AS Validated_Total_Scanned_Quantity,

FROM (SELECT A.Lane_Number,
 A.Work_Order_Number,
 A.Part_Number_Name,
 sum(A.Allocated_Quantity) AS Sum_of_Allocated_Quantity,
 (
SELECT sum(C.Scanned_Quantity)
FROM Scans as C
WHERE
A.Company_Number=C.Company_Number And
A.Company_Section=C.Company_Section And
A.Wave_Number=C.Wave_Number And
A.Lane_Number=C.Lane_Number And
A.Work_Order_Number=C.Scanned_Work_Order_Number And
A.Part_Number_Name=C.Scanned_Part_Number_Name
) AS Total_Scanned_Quantity,
 B.Part_Number
FROM Master AS A LEFT JOIN Excluded AS B ON (A.Company_Number=B.Company_Number) AND (A.Company_Section=B.Company_Section) AND (A.Part_Number_Name=B.Part_Number)
WHERE A.Company_Number=686 And
A.Company_Section='Conveyor' And
A.Wave_Number= " + waveReciente.ToString() + @"And
A.Allocated_Quantity>0
GROUP BY A.Company_Number,
 A.Company_Section,
 A.Wave_Number,
 A.Lane_Number,
 A.Work_Order_Number,
 A.Part_Number_Name,
 B.Part_Number
)  AS A
where Part_Number is null
group by Lane_Number, Work_Order_Number
) AS P
GROUP BY Lane_Number";

    string varestaciones = "[ ";
    string varprogreso = "[ ";
    int numDeEstaciones = 0;
    decimal sumProgreso = 0;
    int promedioProgreso = 0;

    foreach (var row in db.Query(selectQueryString))
    {
        numDeEstaciones++;
        sumProgreso += row.Progress;
        varestaciones += row.Lane_Number.ToString() + ",";
        varprogreso += row.Progress.ToString() + ",";
    }

    promedioProgreso = (int)Math.Round(sumProgreso / numDeEstaciones);

    varestaciones = varestaciones.Remove(varestaciones.Length - 1, 1);
    varprogreso = varprogreso.Remove(varprogreso.Length - 1, 1);
    varestaciones += "]";
    varprogreso += "]";

    double factor = Math.Round(((100.0 - promedioProgreso) / promedioProgreso) * 1000);


    TimeSpan tiempoRestante2 = TimeSpan.FromTicks(tiempoTranscurrido.Ticks * (long)factor);
    TimeSpan TT2 = TimeSpan.FromTicks(tiempoRestante2.Ticks / 1000);
    TimeSpan tiempoRestante = new TimeSpan(TT2.Days, TT2.Hours, TT2.Minutes, TT2.Seconds);
    #endregion
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>Progeso Setup</title>
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css">
    <!-- Bootstrap core CSS -->
    <link href="~/css/bootstrap.min.css" rel="stylesheet">
    <!-- Material Design Bootstrap -->
    <link href="~/css/mdb.min.css" rel="stylesheet">
    <!-- Your custom styles (optional) -->
    <link href="~/css/style.min.css" rel="stylesheet">

</head>

<body class="grey lighten-3">
    <!--Main layout-->
    <main id="main" class="pt-5 mx-lg-2">
        <div class="container-fluid">

            <div class="row wow fadeIn">

                <!--Grid column-->
                <div class="col-md-10">

                    <!-- Heading -->
                    <div class="card mb-4 wow fadeIn">

                        <!--Card content-->
                        <div class="card-body d-sm-flex justify-content-between">
                            <h1 class="font-weight-bold mb-2 mb-sm-0 pt-1" style="font-size: 5vw">
                                Set up Wave @waveReciente
                            </h1>
                        </div>

                    </div>
                </div>
                <div class="col-md-2 pl-0">
                    <img id="medlinelogo" class="d-flex justify-content-right" src="~/Images/medline-logo.png" alt="Medline Logo" height="165vw" width="165vw" style="margin-left:3vw">
                </div>


            </div>

            <!-- Heading -->
            <!--Grid row-->
            <div class="row wow fadeIn pt-1">

                <!--Grid column-->
                <div class="col-md-3 mb-4">

                    <!--Card-->
                    <div class="card mb-4" style="height: 38%;">

                        <!-- Card header -->
                        <div class="card-header text-center">
                            <h1 id="test" class="font-weight-bold mb-2 mb-sm-0 pt-1" style="font-size: 1.75vw">
                                Progreso Total
                            </h1>
                        </div>

                        <!--Card content-->
                        <div class="card-body pt-4">

                            <canvas id="ChartProgresso"></canvas>

                        </div>

                    </div>
                    <!--/.Card-->
                    <!--Card-->
                    <div class="card mb-4">

                        <!--Card content-->
                        <div class="card-body">

                            <!-- List group links -->
                            <div class="list-group list-group-flush align-items-center">
                                <a class="list-group-item text-center list-group-item-action waves-effect" data-toggle="modal" data-target="#basicExampleModal">
                                    <h3 style="font-size: 1.75vw"><span class="badge badge-pill" style="background-color:#24409c">Total de WOs</span></h3>
                                    <h3 style="font-size: 2.25vw">@totalWo.ToString()</h3>
                                </a>
                                <a class="list-group-item text-center list-group-item-action waves-effect">
                                    <h3 style="font-size: 1.75vw"><span class="badge badge-pill" style="background-color:#24409c">Tiempo Transcurrido</span></h3>
                                    <h3 style="font-size: 2.25vw">@tiempoTranscurrido</h3>
                                </a>
                                <a class="list-group-item text-center list-group-item-action waves-effect">
                                    <h3 style="font-size: 1.75vw"><span class="badge badge-pill" style="background-color: #24409c">Tiempo Estimado Restante</span></h3>
                                    <h3 style="font-size: 2.25vw">@tiempoRestante</h3>
                                </a>
                            </div>
                            <!-- List group links -->

                        </div>

                    </div>
                    <!--/.Card-->

                </div>
                <!--Grid column-->
                <!--Grid column-->
                <div class="col-md-9 mb-4">

                    <!--Card-->
                    <div class="card" style="height: 98%;">
                        <div class="card-header text-center">
                            <h1 class="mb-2 mb-sm-0 pt-1 font-weight-bold" style="font-size: 1.75vw">
                                Progreso por Estación
                            </h1>
                        </div>
                        <!--Card content-->
                        <div class="card-body">

                            <canvas id="ChartProgresoEstacion" style="height: 10%"></canvas>

                        </div>

                    </div>
                    <!--/.Card-->

                </div>
                <!--Grid column-->

            </div>
        </div>

        <div class="modal fade" id="basicExampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
             aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title font-weight-bold mb-2 mb-sm-0 pt-1" id="exampleModalLabel" style="font-size: 1.75vw">
                            Detalle de Wave
                        </h1>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col">Línea</th>
                                    <th scope="col">WO</th>
                                    <th scope="col">Componentes</th>
                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var row in DetalleResultado)
                                {
                                    <tr>
                                        <td>@row.Lane</td>
                                        <td>@row.WO</td>
                                        <td>@row.Components</td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>


    </main>
    <!--Main layout-->
    <!-- SCRIPTS -->
    <!-- JQuery -->
    <script type="text/javascript" src="~/js/jquery-3.4.0.min.js"></script>
    <!-- Bootstrap tooltips -->
    <script type="text/javascript" src="~/js/popper.min.js"></script>
    <!-- Bootstrap core JavaScript -->
    <script type="text/javascript" src="~/js/bootstrap.min.js"></script>
    <!-- MDB core JavaScript -->
    <script type="text/javascript" src="~/js/mdb.min.js"></script>
    <!-- Initializations -->
    <script type="text/javascript">
    // Animations initialization
    new WOW().init();
    </script>
    <script> src = "https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js"</script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>


    <!-- Charts -->
    <script>

        if (document.documentElement.clientHeight < 850)
        {
            document.getElementById("medlinelogo").style.height = '9.5vw';
            document.getElementById("medlinelogo").style.width = '9.5vw';
            document.getElementById("main").classList.remove('pt-5');
            document.getElementById("main").classList.add('pt-4');

        }



    // Line
    var ctx = document.getElementById("ChartProgresoEstacion").getContext('2d');
    var myChart = new Chart(ctx, {
      type: 'bar',
      data: {
          labels: @varestaciones,
          datasets: [{
          label: 'Proceso',
          data: @varprogreso,
          backgroundColor: [
      "rgba(255, 0, 0, 1)","rgba(255, 115, 0, 1)",
      "rgba(255, 225, 0, 1)", "rgba(174, 255, 0, 1)",
      "rgba(51, 255, 0, 1)", "rgba(0, 255, 119, 1)", "rgba(0, 255, 217,1)",
      "rgba(0, 179, 255, 1)","rgba(0, 60, 255, 1)",  "rgba(76, 0, 255, 1)",
      "rgba(170, 0, 255, 1)","rgba(255, 0, 242,1)"
          ],
          borderColor: [
          "rgb((255, 0, 0)","rgb(255, 115, 0)",
          "rgb(255, 225, 0)", "rgb(174, 255, 0)",
          "rgb(51, 255, 0)", "rgb(0, 255, 119)", "rgb(0, 255, 217)",
          "rgb(0, 179, 255)","rgb(0, 60, 255)",  "rgb(76, 0, 255)",
          "rgb(170, 0, 255)","rgb(255, 0, 242)"
          ],
          borderWidth: 2
        }]
      },
      options: {
        maintainAspectRatio:false,
        responsive: true,
        animation: {
          animationRotate: true,
                    duration: 2000
        },
        legend: { display: false },
        scales: {
          yAxes: [{
            scaleLabel: {
                            labelString: "Progreso %",
                            display: true,
                            fontSize: Math.round(document.documentElement.clientHeight/ 36)
                        },
                        ticks: {
                            fontSize: Math.round(document.documentElement.clientHeight/ 38),
                            min: 0,
                            max: 100,
                            beginAtZero: true
                        }
          }],
          xAxes: [{
                        scaleLabel: {
                            labelString: "Estación",
                            display: true,
                            fontSize: Math.round(document.documentElement.clientHeight/ 36)
                        },
                        ticks: {
                            fontSize:Math.round(document.documentElement.clientHeight/ 38)
                        }
                    }]
        },
        plugins: {
                    // Change options for ALL labels of THIS CHART
            datalabels: {
                color: "rgb(0,0,0)",
                        font: function(context) {
                            var height = context.chart.height;
                            var size = Math.round(height / 20);
                            return {
                                size: size

                            };

                        },

                    }
                }
      }
    });

    //pie
    var data = {
            labels: [
              "Completado",
              "No completado"
            ],
            datasets: [
              {
                  data: [@promedioProgreso, 100 - @promedioProgreso],
                  backgroundColor: [
                    "#B3DDA8",
                    "#F4F4F4"
                  ],
                  hoverBackgroundColor: [
                    "#B3DDA8",
                    "#F4F4F4"
                  ]
              }]
        };

        var promisedDeliveryChart = new Chart(document.getElementById('ChartProgresso'), {
            type: 'doughnut',
            data: data,
            options: {
                responsive: true,
                cutoutPercentage: 88,
                animation: {
                    animationRotate: true,
                    duration: 2000
                },
                legend: {
                    display: false
                },
                plugins: {
                    datalabels: {
                        display: false,
                    }
                }
            },
            plugins: [{
                beforeDraw: function (chart) {
                    var width = chart.chart.width,
                        height = chart.chart.height,
                        ctx = chart.chart.ctx;

                    ctx.restore();
                    var fontSize = (height / 50).toFixed(2);
                    ctx.font = fontSize + "em sans-serif";

                    ctx.textBaseline = "middle";

                    var text = @promedioProgreso.ToString() + "%",
                        textX = Math.round((width - ctx.measureText(text).width) / 2),
                        textY = height / 2;

                    ctx.fillText(text, textX, textY);
                    ctx.save();
                }
            }]
        });

        window.setInterval('refresh()',600000); //15 min
        function refresh(){
            window .location.reload();
        }
    </script>
</body>

</html>
